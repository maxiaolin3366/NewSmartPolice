<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smartpolice.dao.DeviceInfMapper">
    <resultMap id="BaseResultMap" type="cn.smartpolice.entity.DeviceInf">
        <result column="deviceid" jdbcType="INTEGER" property="deviceid"/>
        <result column="serial" jdbcType="VARCHAR" property="serial"/>
        <result column="code" jdbcType="CHAR" property="code"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="type" jdbcType="CHAR" property="type"/>
        <result column="state" jdbcType="CHAR" property="state"/>
        <result column="date" jdbcType="TIMESTAMP" property="date"/>
        <result column="longitude" jdbcType="VARCHAR" property="longitude"/>
        <result column="latitude" jdbcType="VARCHAR" property="latitude"/>
        <result column="maxconlimit" jdbcType="INTEGER" property="maxconlimit"/>
        <result column="mphone" jdbcType="VARCHAR" property="mphone"/>
    </resultMap>

    <select id="selectDeviceBySid" parameterType="Integer" resultMap="BaseResultMap">
        select * from device_inf where deviceid = #{sid}
    </select>
    <select id="selectDeviceByUserName" parameterType="String" resultType="cn.smartpolice.entity.DeviceInf">
        select * from device_inf where username = #{username}
    </select>
    <update id="updateDeviceInf" parameterType="cn.smartpolice.entity.DeviceInf">
        update device_inf set
        username=#{username},passworld=#{passworld},type=#{type},longitude=#{longitude},latitude=#{latitude},maxconlimit=#{maxconlimit},mphone=#{mphone}
        where deviceid=#{deviceid}
    </update>
    <update id="changeStateToZeroById" parameterType="Integer">
        update device_inf set state = 0 where deviceid = #{deviceId}
    </update>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        deviceid, serial, code, username, password, type, state, date, longitude, latitude,
        maxconlimit, mphone
    </sql>
    <select id="selectByExample" parameterType="cn.smartpolice.entity.DeviceInfExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from device_inf
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="cn.smartpolice.entity.DeviceInfExample">
        delete from device_inf
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.smartpolice.entity.DeviceInf">
        insert into device_inf (deviceid, serial, code,
        username, password, type,
        state, date, longitude,
        latitude, maxconlimit, mphone
        )
        values (#{deviceid,jdbcType=INTEGER}, #{serial,jdbcType=VARCHAR}, #{code,jdbcType=CHAR},
        #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{type,jdbcType=CHAR},
        #{state,jdbcType=CHAR}, #{date,jdbcType=TIMESTAMP}, #{longitude,jdbcType=VARCHAR},
        #{latitude,jdbcType=VARCHAR}, #{maxconlimit,jdbcType=INTEGER}, #{mphone,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.smartpolice.entity.DeviceInf">
        insert into device_inf
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deviceid != null">
                deviceid,
            </if>
            <if test="serial != null">
                serial,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="date != null">
                date,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
            <if test="latitude != null">
                latitude,
            </if>
            <if test="maxconlimit != null">
                maxconlimit,
            </if>
            <if test="mphone != null">
                mphone,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deviceid != null">
                #{deviceid,jdbcType=INTEGER},
            </if>
            <if test="serial != null">
                #{serial,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=CHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=CHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=CHAR},
            </if>
            <if test="date != null">
                #{date,jdbcType=TIMESTAMP},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=VARCHAR},
            </if>
            <if test="latitude != null">
                #{latitude,jdbcType=VARCHAR},
            </if>
            <if test="maxconlimit != null">
                #{maxconlimit,jdbcType=INTEGER},
            </if>
            <if test="mphone != null">
                #{mphone,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.smartpolice.entity.DeviceInfExample" resultType="java.lang.Integer">
        select count(*) from device_inf
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update device_inf
        <set>
            <if test="record.deviceid != null">
                deviceid = #{record.deviceid,jdbcType=INTEGER},
            </if>
            <if test="record.serial != null">
                serial = #{record.serial,jdbcType=VARCHAR},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=CHAR},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=CHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=CHAR},
            </if>
            <if test="record.date != null">
                date = #{record.date,jdbcType=TIMESTAMP},
            </if>
            <if test="record.longitude != null">
                longitude = #{record.longitude,jdbcType=VARCHAR},
            </if>
            <if test="record.latitude != null">
                latitude = #{record.latitude,jdbcType=VARCHAR},
            </if>
            <if test="record.maxconlimit != null">
                maxconlimit = #{record.maxconlimit,jdbcType=INTEGER},
            </if>
            <if test="record.mphone != null">
                mphone = #{record.mphone,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update device_inf
        set deviceid = #{record.deviceid,jdbcType=INTEGER},
        serial = #{record.serial,jdbcType=VARCHAR},
        code = #{record.code,jdbcType=CHAR},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=CHAR},
        state = #{record.state,jdbcType=CHAR},
        date = #{record.date,jdbcType=TIMESTAMP},
        longitude = #{record.longitude,jdbcType=VARCHAR},
        latitude = #{record.latitude,jdbcType=VARCHAR},
        maxconlimit = #{record.maxconlimit,jdbcType=INTEGER},
        mphone = #{record.mphone,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>