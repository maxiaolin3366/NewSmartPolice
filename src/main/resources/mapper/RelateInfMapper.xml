<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smartpolice.dao.RelateInfMapper">
    <resultMap id="BaseResultMap" type="cn.smartpolice.entity.RelateInf">
        <result column="relateid" jdbcType="INTEGER" property="relateid"/>
        <result column="userid" jdbcType="INTEGER" property="userid"/>
        <result column="deviceid" jdbcType="INTEGER" property="deviceid"/>
        <result column="settime" jdbcType="TIMESTAMP" property="settime"/>
        <result column="authority" jdbcType="CHAR" property="authority"/>
        <result column="alias" jdbcType="VARCHAR" property="alias"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="state" jdbcType="CHAR" property="state"/>
    </resultMap>
    <select id="findUserIdByDeviceId" parameterType="int">
        select * from relate_inf where deviceid=#{deviceid}
    </select>
    <select id="findManagerIdByDeviceId" parameterType="int">
        select * from relate_inf where deviceid=#{deviceid} and authority='0'
    </select>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        relateid, userid, deviceid, settime, authority, alias, password, state
    </sql>
    <select id="selectByExample" parameterType="cn.smartpolice.entity.RelateInfExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from relate_inf
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="cn.smartpolice.entity.RelateInfExample">
        delete from relate_inf
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.smartpolice.entity.RelateInf">
        insert into relate_inf (relateid, userid, deviceid,
        settime, authority, alias,
        password, state)
        values (#{relateid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{deviceid,jdbcType=INTEGER},
        #{settime,jdbcType=TIMESTAMP}, #{authority,jdbcType=CHAR}, #{alias,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR}, #{state,jdbcType=CHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.smartpolice.entity.RelateInf">
        insert into relate_inf
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="relateid != null">
                relateid,
            </if>
            <if test="userid != null">
                userid,
            </if>
            <if test="deviceid != null">
                deviceid,
            </if>
            <if test="settime != null">
                settime,
            </if>
            <if test="authority != null">
                authority,
            </if>
            <if test="alias != null">
                alias,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="state != null">
                state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="relateid != null">
                #{relateid,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="deviceid != null">
                #{deviceid,jdbcType=INTEGER},
            </if>
            <if test="settime != null">
                #{settime,jdbcType=TIMESTAMP},
            </if>
            <if test="authority != null">
                #{authority,jdbcType=CHAR},
            </if>
            <if test="alias != null">
                #{alias,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.smartpolice.entity.RelateInfExample" resultType="java.lang.Integer">
        select count(*) from relate_inf
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update relate_inf
        <set>
            <if test="record.relateid != null">
                relateid = #{record.relateid,jdbcType=INTEGER},
            </if>
            <if test="record.userid != null">
                userid = #{record.userid,jdbcType=INTEGER},
            </if>
            <if test="record.deviceid != null">
                deviceid = #{record.deviceid,jdbcType=INTEGER},
            </if>
            <if test="record.settime != null">
                settime = #{record.settime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.authority != null">
                authority = #{record.authority,jdbcType=CHAR},
            </if>
            <if test="record.alias != null">
                alias = #{record.alias,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update relate_inf
        set relateid = #{record.relateid,jdbcType=INTEGER},
        userid = #{record.userid,jdbcType=INTEGER},
        deviceid = #{record.deviceid,jdbcType=INTEGER},
        settime = #{record.settime,jdbcType=TIMESTAMP},
        authority = #{record.authority,jdbcType=CHAR},
        alias = #{record.alias,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        state = #{record.state,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>