<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.smartpolice.dao.CompanyInfoMapper">
    <resultMap id="BaseResultMap" type="cn.smartpolice.entity.CompanyInfo">
        <result column="company_id" property="companyId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="reg_address" property="regAddress" jdbcType="VARCHAR"/>
        <result column="business_registration_number" property="businessRegistrationNumber" jdbcType="VARCHAR"/>
        <result column="unified_credit_code" property="unifiedCreditCode" jdbcType="VARCHAR"/>
        <result column="legal_representative" property="legalRepresentative" jdbcType="VARCHAR"/>
        <result column="type_of_enterprise" property="typeOfEnterprise" jdbcType="VARCHAR"/>
        <result column="industry" property="industry" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="VARCHAR"/>
        <result column="registered_capital" property="registeredCapital" jdbcType="VARCHAR"/>
        <result column="reg_date" property="regDate" jdbcType="DATE"/>
        <result column="expire_date" property="expireDate" jdbcType="DATE"/>
        <result column="business_scope" property="businessScope" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        company_id, name, reg_address, business_registration_number, unified_credit_code,
        legal_representative, type_of_enterprise, industry, state, registered_capital, reg_date,
        expire_date, business_scope
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.smartpolice.entity.CompanyInfoExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from company_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="cn.smartpolice.entity.CompanyInfoExample">
        delete from company_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.smartpolice.entity.CompanyInfo">
        insert into company_info (company_id, name, reg_address,
        business_registration_number, unified_credit_code,
        legal_representative, type_of_enterprise,
        industry, state, registered_capital,
        reg_date, expire_date, business_scope
        )
        values (#{companyId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{regAddress,jdbcType=VARCHAR},
        #{businessRegistrationNumber,jdbcType=VARCHAR}, #{unifiedCreditCode,jdbcType=VARCHAR},
        #{legalRepresentative,jdbcType=VARCHAR}, #{typeOfEnterprise,jdbcType=VARCHAR},
        #{industry,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{registeredCapital,jdbcType=VARCHAR},
        #{regDate,jdbcType=DATE}, #{expireDate,jdbcType=DATE}, #{businessScope,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.smartpolice.entity.CompanyInfo">
        insert into company_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="companyId != null">
                company_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="regAddress != null">
                reg_address,
            </if>
            <if test="businessRegistrationNumber != null">
                business_registration_number,
            </if>
            <if test="unifiedCreditCode != null">
                unified_credit_code,
            </if>
            <if test="legalRepresentative != null">
                legal_representative,
            </if>
            <if test="typeOfEnterprise != null">
                type_of_enterprise,
            </if>
            <if test="industry != null">
                industry,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="registeredCapital != null">
                registered_capital,
            </if>
            <if test="regDate != null">
                reg_date,
            </if>
            <if test="expireDate != null">
                expire_date,
            </if>
            <if test="businessScope != null">
                business_scope,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="companyId != null">
                #{companyId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="regAddress != null">
                #{regAddress,jdbcType=VARCHAR},
            </if>
            <if test="businessRegistrationNumber != null">
                #{businessRegistrationNumber,jdbcType=VARCHAR},
            </if>
            <if test="unifiedCreditCode != null">
                #{unifiedCreditCode,jdbcType=VARCHAR},
            </if>
            <if test="legalRepresentative != null">
                #{legalRepresentative,jdbcType=VARCHAR},
            </if>
            <if test="typeOfEnterprise != null">
                #{typeOfEnterprise,jdbcType=VARCHAR},
            </if>
            <if test="industry != null">
                #{industry,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="registeredCapital != null">
                #{registeredCapital,jdbcType=VARCHAR},
            </if>
            <if test="regDate != null">
                #{regDate,jdbcType=DATE},
            </if>
            <if test="expireDate != null">
                #{expireDate,jdbcType=DATE},
            </if>
            <if test="businessScope != null">
                #{businessScope,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.smartpolice.entity.CompanyInfoExample" resultType="java.lang.Integer">
        select count(*) from company_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update company_info
        <set>
            <if test="record.companyId != null">
                company_id = #{record.companyId,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.regAddress != null">
                reg_address = #{record.regAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.businessRegistrationNumber != null">
                business_registration_number = #{record.businessRegistrationNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.unifiedCreditCode != null">
                unified_credit_code = #{record.unifiedCreditCode,jdbcType=VARCHAR},
            </if>
            <if test="record.legalRepresentative != null">
                legal_representative = #{record.legalRepresentative,jdbcType=VARCHAR},
            </if>
            <if test="record.typeOfEnterprise != null">
                type_of_enterprise = #{record.typeOfEnterprise,jdbcType=VARCHAR},
            </if>
            <if test="record.industry != null">
                industry = #{record.industry,jdbcType=VARCHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=VARCHAR},
            </if>
            <if test="record.registeredCapital != null">
                registered_capital = #{record.registeredCapital,jdbcType=VARCHAR},
            </if>
            <if test="record.regDate != null">
                reg_date = #{record.regDate,jdbcType=DATE},
            </if>
            <if test="record.expireDate != null">
                expire_date = #{record.expireDate,jdbcType=DATE},
            </if>
            <if test="record.businessScope != null">
                business_scope = #{record.businessScope,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update company_info
        set company_id = #{record.companyId,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        reg_address = #{record.regAddress,jdbcType=VARCHAR},
        business_registration_number = #{record.businessRegistrationNumber,jdbcType=VARCHAR},
        unified_credit_code = #{record.unifiedCreditCode,jdbcType=VARCHAR},
        legal_representative = #{record.legalRepresentative,jdbcType=VARCHAR},
        type_of_enterprise = #{record.typeOfEnterprise,jdbcType=VARCHAR},
        industry = #{record.industry,jdbcType=VARCHAR},
        state = #{record.state,jdbcType=VARCHAR},
        registered_capital = #{record.registeredCapital,jdbcType=VARCHAR},
        reg_date = #{record.regDate,jdbcType=DATE},
        expire_date = #{record.expireDate,jdbcType=DATE},
        business_scope = #{record.businessScope,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>