<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smartpolice.dao.UserLogMapper">
    <resultMap id="BaseResultMap" type="cn.smartpolice.entity.UserLog">
        <result column="logid" jdbcType="INTEGER" property="logid"/>
        <result column="userid" jdbcType="INTEGER" property="userid"/>
        <result column="date" jdbcType="TIMESTAMP" property="date"/>
        <result column="ipaddr" jdbcType="CHAR" property="ipaddr"/>
        <result column="port" jdbcType="INTEGER" property="port"/>
        <result column="operate" jdbcType="INTEGER" property="operate"/>
    </resultMap>
    <select id="selectOffDateByIdAndOprate" resultType="Date">
        select date from user_log where userid=#{0} and oprate=#{1}
    </select>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        logid, userid, date, ipaddr, port, operate
    </sql>
    <select id="selectByExample" parameterType="cn.smartpolice.entity.UserLogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="cn.smartpolice.entity.UserLogExample">
        delete from user_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.smartpolice.entity.UserLog">
        insert into user_log (logid, userid, date,
        ipaddr, port, operate)
        values (#{logid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP},
        #{ipaddr,jdbcType=CHAR}, #{port,jdbcType=INTEGER}, #{operate,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="cn.smartpolice.entity.UserLog">
        insert into user_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="logid != null">
                logid,
            </if>
            <if test="userid != null">
                userid,
            </if>
            <if test="date != null">
                date,
            </if>
            <if test="ipaddr != null">
                ipaddr,
            </if>
            <if test="port != null">
                port,
            </if>
            <if test="operate != null">
                operate,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="logid != null">
                #{logid,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="date != null">
                #{date,jdbcType=TIMESTAMP},
            </if>
            <if test="ipaddr != null">
                #{ipaddr,jdbcType=CHAR},
            </if>
            <if test="port != null">
                #{port,jdbcType=INTEGER},
            </if>
            <if test="operate != null">
                #{operate,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.smartpolice.entity.UserLogExample" resultType="java.lang.Integer">
        select count(*) from user_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_log
        <set>
            <if test="record.logid != null">
                logid = #{record.logid,jdbcType=INTEGER},
            </if>
            <if test="record.userid != null">
                userid = #{record.userid,jdbcType=INTEGER},
            </if>
            <if test="record.date != null">
                date = #{record.date,jdbcType=TIMESTAMP},
            </if>
            <if test="record.ipaddr != null">
                ipaddr = #{record.ipaddr,jdbcType=CHAR},
            </if>
            <if test="record.port != null">
                port = #{record.port,jdbcType=INTEGER},
            </if>
            <if test="record.operate != null">
                operate = #{record.operate,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_log
        set logid = #{record.logid,jdbcType=INTEGER},
        userid = #{record.userid,jdbcType=INTEGER},
        date = #{record.date,jdbcType=TIMESTAMP},
        ipaddr = #{record.ipaddr,jdbcType=CHAR},
        port = #{record.port,jdbcType=INTEGER},
        operate = #{record.operate,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>