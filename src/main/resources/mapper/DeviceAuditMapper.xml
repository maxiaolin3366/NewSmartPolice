<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smartpolice.dao.DeviceAuditMapper">
    <resultMap id="BaseResultMap" type="cn.smartpolice.entity.DeviceAudit">
        <result column="auditid" jdbcType="INTEGER" property="auditid"/>
        <result column="devicename" jdbcType="VARCHAR" property="devicename"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="demo" jdbcType="VARCHAR" property="demo"/>
        <result column="companyid" jdbcType="INTEGER" property="companyid"/>
        <result column="date" jdbcType="TIMESTAMP" property="date"/>
        <result column="checkid" jdbcType="INTEGER" property="checkid"/>
        <result column="checkdate" jdbcType="TIMESTAMP" property="checkdate"/>
        <result column="type" jdbcType="CHAR" property="type"/>
        <result column="state" jdbcType="CHAR" property="state"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        auditid, devicename, code, demo, companyid, date, checkid, checkdate, type, state
    </sql>
    <select id="selectByExample" parameterType="cn.smartpolice.entity.DeviceAuditExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from device_audit
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="cn.smartpolice.entity.DeviceAuditExample">
        delete from device_audit
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.smartpolice.entity.DeviceAudit">
        insert into device_audit (auditid, devicename, code,
        demo, companyid, date,
        checkid, checkdate, type,
        state)
        values (#{auditid,jdbcType=INTEGER}, #{devicename,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
        #{demo,jdbcType=VARCHAR}, #{companyid,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP},
        #{checkid,jdbcType=INTEGER}, #{checkdate,jdbcType=TIMESTAMP}, #{type,jdbcType=CHAR},
        #{state,jdbcType=CHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.smartpolice.entity.DeviceAudit">
        insert into device_audit
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="auditid != null">
                auditid,
            </if>
            <if test="devicename != null">
                devicename,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="demo != null">
                demo,
            </if>
            <if test="companyid != null">
                companyid,
            </if>
            <if test="date != null">
                date,
            </if>
            <if test="checkid != null">
                checkid,
            </if>
            <if test="checkdate != null">
                checkdate,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="state != null">
                state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="auditid != null">
                #{auditid,jdbcType=INTEGER},
            </if>
            <if test="devicename != null">
                #{devicename,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="demo != null">
                #{demo,jdbcType=VARCHAR},
            </if>
            <if test="companyid != null">
                #{companyid,jdbcType=INTEGER},
            </if>
            <if test="date != null">
                #{date,jdbcType=TIMESTAMP},
            </if>
            <if test="checkid != null">
                #{checkid,jdbcType=INTEGER},
            </if>
            <if test="checkdate != null">
                #{checkdate,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null">
                #{type,jdbcType=CHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.smartpolice.entity.DeviceAuditExample" resultType="java.lang.Integer">
        select count(*) from device_audit
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update device_audit
        <set>
            <if test="record.auditid != null">
                auditid = #{record.auditid,jdbcType=INTEGER},
            </if>
            <if test="record.devicename != null">
                devicename = #{record.devicename,jdbcType=VARCHAR},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.demo != null">
                demo = #{record.demo,jdbcType=VARCHAR},
            </if>
            <if test="record.companyid != null">
                companyid = #{record.companyid,jdbcType=INTEGER},
            </if>
            <if test="record.date != null">
                date = #{record.date,jdbcType=TIMESTAMP},
            </if>
            <if test="record.checkid != null">
                checkid = #{record.checkid,jdbcType=INTEGER},
            </if>
            <if test="record.checkdate != null">
                checkdate = #{record.checkdate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=CHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update device_audit
        set auditid = #{record.auditid,jdbcType=INTEGER},
        devicename = #{record.devicename,jdbcType=VARCHAR},
        code = #{record.code,jdbcType=VARCHAR},
        demo = #{record.demo,jdbcType=VARCHAR},
        companyid = #{record.companyid,jdbcType=INTEGER},
        date = #{record.date,jdbcType=TIMESTAMP},
        checkid = #{record.checkid,jdbcType=INTEGER},
        checkdate = #{record.checkdate,jdbcType=TIMESTAMP},
        type = #{record.type,jdbcType=CHAR},
        state = #{record.state,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>