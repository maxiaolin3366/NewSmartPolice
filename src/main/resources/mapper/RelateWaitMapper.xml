<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smartpolice.dao.RelateWaitMapper">
    <resultMap id="BaseResultMap" type="cn.smartpolice.entity.RelateWait">
        <result column="rwid" jdbcType="INTEGER" property="rwid"/>
        <result column="applyid" jdbcType="INTEGER" property="applyid"/>
        <result column="deviceid" jdbcType="INTEGER" property="deviceid"/>
        <result column="askid" jdbcType="INTEGER" property="askid"/>
        <result column="applytype" jdbcType="BIT" property="applytype"/>
        <result column="applyright" jdbcType="CHAR" property="applyright"/>
        <result column="applytime" jdbcType="TIMESTAMP" property="applytime"/>
        <result column="message" jdbcType="VARCHAR" property="message"/>
        <result column="state" jdbcType="CHAR" property="state"/>
        <result column="kind" jdbcType="CHAR" property="kind"/>
        <result column="CWID" jdbcType="INTEGER" property="cwid"/>
        <result column="ACKTIME" jdbcType="TIMESTAMP" property="acktime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        rwid, applyid, deviceid, askid, applytype, applyright, applytime, message, state,
        kind, CWID, ACKTIME
    </sql>
    <select id="selectByExample" parameterType="cn.smartpolice.entity.RelateWaitExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from relate_wait
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="cn.smartpolice.entity.RelateWaitExample">
        delete from relate_wait
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.smartpolice.entity.RelateWait">
        insert into relate_wait (rwid, applyid, deviceid,
        askid, applytype, applyright,
        applytime, message, state,
        kind, CWID, ACKTIME)
        values (#{rwid,jdbcType=INTEGER}, #{applyid,jdbcType=INTEGER}, #{deviceid,jdbcType=INTEGER},
        #{askid,jdbcType=INTEGER}, #{applytype,jdbcType=BIT}, #{applyright,jdbcType=CHAR},
        #{applytime,jdbcType=TIMESTAMP}, #{message,jdbcType=VARCHAR}, #{state,jdbcType=CHAR},
        #{kind,jdbcType=CHAR}, #{cwid,jdbcType=INTEGER}, #{acktime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="cn.smartpolice.entity.RelateWait">
        insert into relate_wait
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="rwid != null">
                rwid,
            </if>
            <if test="applyid != null">
                applyid,
            </if>
            <if test="deviceid != null">
                deviceid,
            </if>
            <if test="askid != null">
                askid,
            </if>
            <if test="applytype != null">
                applytype,
            </if>
            <if test="applyright != null">
                applyright,
            </if>
            <if test="applytime != null">
                applytime,
            </if>
            <if test="message != null">
                message,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="kind != null">
                kind,
            </if>
            <if test="cwid != null">
                CWID,
            </if>
            <if test="acktime != null">
                ACKTIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="rwid != null">
                #{rwid,jdbcType=INTEGER},
            </if>
            <if test="applyid != null">
                #{applyid,jdbcType=INTEGER},
            </if>
            <if test="deviceid != null">
                #{deviceid,jdbcType=INTEGER},
            </if>
            <if test="askid != null">
                #{askid,jdbcType=INTEGER},
            </if>
            <if test="applytype != null">
                #{applytype,jdbcType=BIT},
            </if>
            <if test="applyright != null">
                #{applyright,jdbcType=CHAR},
            </if>
            <if test="applytime != null">
                #{applytime,jdbcType=TIMESTAMP},
            </if>
            <if test="message != null">
                #{message,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=CHAR},
            </if>
            <if test="kind != null">
                #{kind,jdbcType=CHAR},
            </if>
            <if test="cwid != null">
                #{cwid,jdbcType=INTEGER},
            </if>
            <if test="acktime != null">
                #{acktime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.smartpolice.entity.RelateWaitExample" resultType="java.lang.Integer">
        select count(*) from relate_wait
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update relate_wait
        <set>
            <if test="record.rwid != null">
                rwid = #{record.rwid,jdbcType=INTEGER},
            </if>
            <if test="record.applyid != null">
                applyid = #{record.applyid,jdbcType=INTEGER},
            </if>
            <if test="record.deviceid != null">
                deviceid = #{record.deviceid,jdbcType=INTEGER},
            </if>
            <if test="record.askid != null">
                askid = #{record.askid,jdbcType=INTEGER},
            </if>
            <if test="record.applytype != null">
                applytype = #{record.applytype,jdbcType=BIT},
            </if>
            <if test="record.applyright != null">
                applyright = #{record.applyright,jdbcType=CHAR},
            </if>
            <if test="record.applytime != null">
                applytime = #{record.applytime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.message != null">
                message = #{record.message,jdbcType=VARCHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=CHAR},
            </if>
            <if test="record.kind != null">
                kind = #{record.kind,jdbcType=CHAR},
            </if>
            <if test="record.cwid != null">
                CWID = #{record.cwid,jdbcType=INTEGER},
            </if>
            <if test="record.acktime != null">
                ACKTIME = #{record.acktime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update relate_wait
        set rwid = #{record.rwid,jdbcType=INTEGER},
        applyid = #{record.applyid,jdbcType=INTEGER},
        deviceid = #{record.deviceid,jdbcType=INTEGER},
        askid = #{record.askid,jdbcType=INTEGER},
        applytype = #{record.applytype,jdbcType=BIT},
        applyright = #{record.applyright,jdbcType=CHAR},
        applytime = #{record.applytime,jdbcType=TIMESTAMP},
        message = #{record.message,jdbcType=VARCHAR},
        state = #{record.state,jdbcType=CHAR},
        kind = #{record.kind,jdbcType=CHAR},
        CWID = #{record.cwid,jdbcType=INTEGER},
        ACKTIME = #{record.acktime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>