<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smartpolice.dao.MsgChatMapper">
    <resultMap id="BaseResultMap" type="cn.smartpolice.entity.MsgChat">
        <result column="chatid" jdbcType="INTEGER" property="chatid"/>
        <result column="sendid" jdbcType="INTEGER" property="sendid"/>
        <result column="recvid" jdbcType="INTEGER" property="recvid"/>
        <result column="sendtime" jdbcType="TIMESTAMP" property="sendtime"/>
        <result column="type" jdbcType="CHAR" property="type"/>
        <result column="color" jdbcType="VARCHAR" property="color"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.smartpolice.entity.MsgChat">
        <result column="msg" jdbcType="LONGVARCHAR" property="msg"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        chatid, sendid, recvid, sendtime, type, color
    </sql>
    <sql id="Blob_Column_List">
        msg
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="cn.smartpolice.entity.MsgChatExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from msg_chat
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="cn.smartpolice.entity.MsgChatExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from msg_chat
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="cn.smartpolice.entity.MsgChatExample">
        delete from msg_chat
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.smartpolice.entity.MsgChat">
        insert into msg_chat (chatid, sendid, recvid,
        sendtime, type, color,
        msg)
        values (#{chatid,jdbcType=INTEGER}, #{sendid,jdbcType=INTEGER}, #{recvid,jdbcType=INTEGER},
        #{sendtime,jdbcType=TIMESTAMP}, #{type,jdbcType=CHAR}, #{color,jdbcType=VARCHAR},
        #{msg,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.smartpolice.entity.MsgChat">
        insert into msg_chat
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="chatid != null">
                chatid,
            </if>
            <if test="sendid != null">
                sendid,
            </if>
            <if test="recvid != null">
                recvid,
            </if>
            <if test="sendtime != null">
                sendtime,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="color != null">
                color,
            </if>
            <if test="msg != null">
                msg,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="chatid != null">
                #{chatid,jdbcType=INTEGER},
            </if>
            <if test="sendid != null">
                #{sendid,jdbcType=INTEGER},
            </if>
            <if test="recvid != null">
                #{recvid,jdbcType=INTEGER},
            </if>
            <if test="sendtime != null">
                #{sendtime,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null">
                #{type,jdbcType=CHAR},
            </if>
            <if test="color != null">
                #{color,jdbcType=VARCHAR},
            </if>
            <if test="msg != null">
                #{msg,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.smartpolice.entity.MsgChatExample" resultType="java.lang.Integer">
        select count(*) from msg_chat
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update msg_chat
        <set>
            <if test="record.chatid != null">
                chatid = #{record.chatid,jdbcType=INTEGER},
            </if>
            <if test="record.sendid != null">
                sendid = #{record.sendid,jdbcType=INTEGER},
            </if>
            <if test="record.recvid != null">
                recvid = #{record.recvid,jdbcType=INTEGER},
            </if>
            <if test="record.sendtime != null">
                sendtime = #{record.sendtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=CHAR},
            </if>
            <if test="record.color != null">
                color = #{record.color,jdbcType=VARCHAR},
            </if>
            <if test="record.msg != null">
                msg = #{record.msg,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update msg_chat
        set chatid = #{record.chatid,jdbcType=INTEGER},
        sendid = #{record.sendid,jdbcType=INTEGER},
        recvid = #{record.recvid,jdbcType=INTEGER},
        sendtime = #{record.sendtime,jdbcType=TIMESTAMP},
        type = #{record.type,jdbcType=CHAR},
        color = #{record.color,jdbcType=VARCHAR},
        msg = #{record.msg,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update msg_chat
        set chatid = #{record.chatid,jdbcType=INTEGER},
        sendid = #{record.sendid,jdbcType=INTEGER},
        recvid = #{record.recvid,jdbcType=INTEGER},
        sendtime = #{record.sendtime,jdbcType=TIMESTAMP},
        type = #{record.type,jdbcType=CHAR},
        color = #{record.color,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>