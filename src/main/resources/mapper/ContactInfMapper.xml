<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smartpolice.dao.ContactInfMapper">
    <resultMap id="BaseResultMap" type="cn.smartpolice.entity.ContactInf">
        <result column="contactid" jdbcType="INTEGER" property="contactid"/>
        <result column="masterid" jdbcType="INTEGER" property="masterid"/>
        <result column="contactedid" jdbcType="INTEGER" property="contactedid"/>
        <result column="group" jdbcType="VARCHAR" property="group"/>
        <result column="alias" jdbcType="VARCHAR" property="alias"/>
        <result column="settime" jdbcType="TIMESTAMP" property="settime"/>
        <result column="state" jdbcType="CHAR" property="state"/>
        <result column="GROUPNAME" jdbcType="VARCHAR" property="groupname"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        contactid, masterid, contactedid, group, alias, settime, state, GROUPNAME
    </sql>
    <select id="selectByExample" parameterType="cn.smartpolice.entity.ContactInfExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from contact_inf
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="cn.smartpolice.entity.ContactInfExample">
        delete from contact_inf
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.smartpolice.entity.ContactInf">
        insert into contact_inf (contactid, masterid, contactedid,
        group, alias, settime,
        state, GROUPNAME)
        values (#{contactid,jdbcType=INTEGER}, #{masterid,jdbcType=INTEGER}, #{contactedid,jdbcType=INTEGER},
        #{group,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, #{settime,jdbcType=TIMESTAMP},
        #{state,jdbcType=CHAR}, #{groupname,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.smartpolice.entity.ContactInf">
        insert into contact_inf
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="contactid != null">
                contactid,
            </if>
            <if test="masterid != null">
                masterid,
            </if>
            <if test="contactedid != null">
                contactedid,
            </if>
            <if test="group != null">
                group,
            </if>
            <if test="alias != null">
                alias,
            </if>
            <if test="settime != null">
                settime,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="groupname != null">
                GROUPNAME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="contactid != null">
                #{contactid,jdbcType=INTEGER},
            </if>
            <if test="masterid != null">
                #{masterid,jdbcType=INTEGER},
            </if>
            <if test="contactedid != null">
                #{contactedid,jdbcType=INTEGER},
            </if>
            <if test="group != null">
                #{group,jdbcType=VARCHAR},
            </if>
            <if test="alias != null">
                #{alias,jdbcType=VARCHAR},
            </if>
            <if test="settime != null">
                #{settime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=CHAR},
            </if>
            <if test="groupname != null">
                #{groupname,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.smartpolice.entity.ContactInfExample" resultType="java.lang.Integer">
        select count(*) from contact_inf
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update contact_inf
        <set>
            <if test="record.contactid != null">
                contactid = #{record.contactid,jdbcType=INTEGER},
            </if>
            <if test="record.masterid != null">
                masterid = #{record.masterid,jdbcType=INTEGER},
            </if>
            <if test="record.contactedid != null">
                contactedid = #{record.contactedid,jdbcType=INTEGER},
            </if>
            <if test="record.group != null">
                group = #{record.group,jdbcType=VARCHAR},
            </if>
            <if test="record.alias != null">
                alias = #{record.alias,jdbcType=VARCHAR},
            </if>
            <if test="record.settime != null">
                settime = #{record.settime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=CHAR},
            </if>
            <if test="record.groupname != null">
                GROUPNAME = #{record.groupname,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update contact_inf
        set contactid = #{record.contactid,jdbcType=INTEGER},
        masterid = #{record.masterid,jdbcType=INTEGER},
        contactedid = #{record.contactedid,jdbcType=INTEGER},
        group = #{record.group,jdbcType=VARCHAR},
        alias = #{record.alias,jdbcType=VARCHAR},
        settime = #{record.settime,jdbcType=TIMESTAMP},
        state = #{record.state,jdbcType=CHAR},
        GROUPNAME = #{record.groupname,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>